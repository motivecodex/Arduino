package arduinojava;

/**
 * @author Name: Shahin Mokhtar Moshfeghi HvA Id: 500669336 Class: IS202
 */
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.filechooser.FileNameExtensionFilter;

public class GUI extends javax.swing.JFrame {

    /**
     * Passed from ArduinoJava, OpenFile and ImageByte
     */
    ArduinoJava aj = null;
    OpenFile of = null;
    ImageByte ib = null;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        createObjects();
        aj.searchForPorts();
    }

    private void createObjects() {
        aj = new ArduinoJava(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        logLbl = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        btnDisconnect = new javax.swing.JButton();
        btnConnect = new javax.swing.JButton();
        cboxPorts = new javax.swing.JComboBox();
        deviceConnectedLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        onPortLbl = new javax.swing.JLabel();
        deviceConnected = new javax.swing.JLabel();
        onPort = new javax.swing.JLabel();
        clearLog = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        clearArduino = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        displayPreview = new javax.swing.JTextArea();
        browseBtn = new javax.swing.JButton();
        selectLogo = new javax.swing.JButton();
        writeTo = new javax.swing.JButton();
        cLogo = new javax.swing.JLabel();
        fileContentLbl = new javax.swing.JLabel();
        connectionLbl = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Name tag");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        logLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        logLbl.setText("Log");

        txtLog.setEditable(false);
        txtLog.setColumns(20);
        txtLog.setLineWrap(true);
        txtLog.setRows(5);
        txtLog.setFocusable(false);
        txtLog.setMinimumSize(new java.awt.Dimension(4, 22));
        jScrollPane2.setViewportView(txtLog);

        btnDisconnect.setText("Disconnect");
        btnDisconnect.setEnabled(false);
        btnDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisconnectActionPerformed(evt);
            }
        });

        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        cboxPorts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxPortsActionPerformed(evt);
            }
        });

        deviceConnectedLbl.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        deviceConnectedLbl.setText("Device connected:");

        jLabel1.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel1.setText("Select COM port");

        onPortLbl.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        onPortLbl.setText("On port:");

        deviceConnected.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N

        onPort.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N

        clearLog.setText("Clear log");
        clearLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearLogActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/logo.gif"))); // NOI18N

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/line.gif"))); // NOI18N

        clearArduino.setText("Clear Arduino");
        clearArduino.setEnabled(false);
        clearArduino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearArduinoActionPerformed(evt);
            }
        });

        displayPreview.setColumns(20);
        displayPreview.setLineWrap(true);
        displayPreview.setRows(5);
        displayPreview.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        displayPreview.setFocusable(false);
        jScrollPane3.setViewportView(displayPreview);

        browseBtn.setText("Select .csv");
        browseBtn.setEnabled(false);
        browseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseBtnActionPerformed(evt);
            }
        });

        selectLogo.setText("Select logo");
        selectLogo.setEnabled(false);
        selectLogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectLogoActionPerformed(evt);
            }
        });

        writeTo.setText("Write");
        writeTo.setEnabled(false);
        writeTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeToActionPerformed(evt);
            }
        });

        fileContentLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        fileContentLbl.setText("File content");

        connectionLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        connectionLbl.setText("Connection");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel15)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(writeTo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(browseBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(selectLogo))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                            .addComponent(fileContentLbl, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cboxPorts, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(btnDisconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(onPortLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(onPort))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(deviceConnectedLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deviceConnected))
                            .addComponent(connectionLbl))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(logLbl)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(clearArduino)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(clearLog))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileContentLbl)
                    .addComponent(connectionLbl)
                    .addComponent(logLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(cboxPorts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnConnect)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnDisconnect)
                            .addGap(88, 88, 88)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(deviceConnectedLbl)
                                .addComponent(deviceConnected))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(onPortLbl)
                                .addComponent(onPort)))
                        .addComponent(jScrollPane2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(writeTo)
                    .addComponent(selectLogo)
                    .addComponent(browseBtn)
                    .addComponent(clearArduino)
                    .addComponent(clearLog))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        aj.connect();
        if (aj.getConnected() == true) {
            if (aj.initIOStream() == true) {
                aj.initListener();

                /**
                 * Enable buttons: Browse, Disconnect, Clear Arduino, Upload
                 * Automatically, Upload manually, Select logo
                 */
                browseBtn.setEnabled(true);
                btnDisconnect.setEnabled(true);
                clearArduino.setEnabled(true);
                writeTo.setEnabled(true);
                selectLogo.setEnabled(true);

                /**
                 * Disable: Connect button, COM port combo box
                 */
                btnConnect.setEnabled(false);
                cboxPorts.setEnabled(false);

                /**
                 * If device is connected, set text to true
                 */
                Boolean devCon = aj.getConnected();
                deviceConnected.setText(devCon.toString());

                /**
                 * If device is connected, set text: which COM port
                 */
                onPort.setText(cboxPorts.getSelectedItem().toString());
            }
        }
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisconnectActionPerformed
        aj.disconnect();

        /**
         * Disable buttons: Browse, Disconnect, Clear Arduino, Upload
         * Automatically, Upload manually, Select logo,
         */
        browseBtn.setEnabled(false);
        btnDisconnect.setEnabled(false);
        clearArduino.setEnabled(false);
        writeTo.setEnabled(false);
        selectLogo.setEnabled(false);

        /**
         * Enable: Connect button, COM port combo box
         */
        btnConnect.setEnabled(true);
        cboxPorts.setEnabled(true);

        /**
         * If device is disconnect, set text to false
         */
        Boolean devCon = aj.getConnected();
        deviceConnected.setText(devCon.toString());

        /**
         * If device is disconnected, set text: empty String
         */
        onPort.setText("");
    }//GEN-LAST:event_btnDisconnectActionPerformed

    private void cboxPortsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxPortsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxPortsActionPerformed

    private void clearLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearLogActionPerformed
        /**
         * Clear log
         */
        txtLog.setText(null);
    }//GEN-LAST:event_clearLogActionPerformed

    private void clearArduinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearArduinoActionPerformed
        /**
         * String to char converter
         */
//        String strR = "Cleared";
//        int strLengthR = strR.length();
//        for (int i = 0; i < strLengthR; i++) {
//            char charAR = strR.charAt(i);
//            aj.writeData(charAR);
//        }
    }//GEN-LAST:event_clearArduinoActionPerformed

    private void browseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseBtnActionPerformed
        /**
         * File filters, only show images and directories in file chooser
         */
        of = new OpenFile();
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("CSV file", "csv");
        of.fileChooser.setAcceptAllFileFilterUsed(false);
        of.fileChooser.setFileFilter(fnef);

        /**
         * Browse for file (OpenFile.java, openTxtFile())
         */
        of = new OpenFile();
        try {
            of.openTxtFile();
        } catch (Exception e) {
            e.printStackTrace();
        }

        /**
         * Set content of file in the text area
         */
        displayPreview.setText(of.sb.toString());
    }//GEN-LAST:event_browseBtnActionPerformed

    private void writeToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeToActionPerformed
        /**
         * String to char converter and write to Arduino
         */
//        String str = "University";
//        int strLength = str.length();
//        for (int i = 0; i < strLength; i++) {
//            char charA = str.charAt(i);
//            aj.writeData(charA);
//        }

        /**
         * String to char converter and write to Arduino
         */
//        String strR = "Hogeschool";
//        int strLengthR = strR.length();
//        for (int i = 0; i < strLengthR; i++) {
//            char charAR = strR.charAt(i);
//            aj.writeData(charAR);
//        }
        /**
         * Textfield String to char converter and write to Arduino
         */
//        String cName = cpnyName.getText();
//        String fName = firstName.getText();
//        String lName = lastName.getText();
//        String foName = foStudy.getText();
//        for (int i = 0; i < 100; i++) {
//            char coName = cName.charAt(i);
//            char fiName = fName.charAt(i);
//            char laName = lName.charAt(i);
//            char fieName = foName.charAt(i);
//            aj.writeData(coName, fiName, laName, fieName);
//        }
        /**
         * String to char converter and write to Arduino
         */
//        String cName = cpnyName.getText();
//        for (int i = 0; i < 30; i++) {
//            char coName = cName.charAt(i);
//            aj.writeData(coName);
//        }
        /**
         * String to char converter and write to Arduino, each textfield has its
         * own field
         */
//        // Company name
//        String cName = cpnyName.getText();
//        int strLength = cName.length();
//        for (int i = 0; i < 30; i++) {
//            char coName = cName.charAt(i);
//            aj.writeCompanyName(coName);
//        }
//
//        // firstname
//        String fName = firstName.getText();
////        int strLength = cName.length();
//        for (int i = 0; i < 30; i++) {
//            char fiName = fName.charAt(i);
//            aj.writeFirstName(fiName);
//        }
//
//        // lastname
//        String lName = lastName.getText();
////        int strLength = cName.length();
//        for (int i = 0; i < 30; i++) {
//            char laName = lName.charAt(i);
//            aj.writeLastName(laName);
//        }
//
//        // String to char array, to arduino
//        String foName = foStudy.getText();
////        int strLength = cName.length();
//        for (int i = 0; i < 30; i++) {
//            char fieName = foName.charAt(i);
//            aj.writeFoStudy(fieName);
//        }
    }//GEN-LAST:event_writeToActionPerformed

    private void selectLogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectLogoActionPerformed
        /**
         * Set cLogo preferred and maximum size
         */
//        cLogo.setPreferredSize(new Dimension(300, 45));
//        cLogo.setMaximumSize(new Dimension(300, 45));

        /**
         * File filters, only show images and directories in file chooser
         */
        of = new OpenFile();
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Images", "pbm", "jpg", "jpeg", "png", "gif");
        of.fileChooser.setAcceptAllFileFilterUsed(false);
        of.fileChooser.setFileFilter(fnef);

        /**
         * Browse for file (OpenFile.java, openImage())
         */
        ib = new ImageByte();
        try {
            of.openImage();
        } catch (Exception e) {
            e.printStackTrace();
        }

        /**
         * create ImageIcon, then set the icon Image to cLogo
         */
        try {
            ImageIcon icon = new ImageIcon(of.fileChooser.getSelectedFile().toURL());
            cLogo.setIcon(icon);
            /* Test image to string and string to image finish */
        } catch (MalformedURLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        /**
         * Encode image to string imgstr, decode String to image newImg and
         * write to new destination
         */
//        try {
//            /* Test image to string and string to image start */
//            BufferedImage img = ImageIO.read(new File(of.fileChooser.getSelectedFile().toString()));
//            BufferedImage newImg;
//            String imgstr;
//            imgstr = ib.encodeToString(img, "png");
//            System.out.println(imgstr);
//            newImg = ib.decodeToImage(imgstr);
//            ImageIO.write(newImg, "png", new File("D:\\NetBeansProjects\\ArduinoJava\\src\\resource\\logo.png"));
//        } catch (IOException e) {
//            e.printStackTrace();
//        }
        /**
         * Encode BMP to int array bmpStr
         */
        ib = new ImageByte();
        try {
            ib.seeBMPImage(null);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_selectLogoActionPerformed

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseBtn;
    public javax.swing.JButton btnConnect;
    public javax.swing.JButton btnDisconnect;
    private javax.swing.JLabel cLogo;
    public javax.swing.JComboBox cboxPorts;
    private javax.swing.JButton clearArduino;
    private javax.swing.JButton clearLog;
    private javax.swing.JLabel connectionLbl;
    private javax.swing.JLabel deviceConnected;
    private javax.swing.JLabel deviceConnectedLbl;
    private javax.swing.JTextArea displayPreview;
    private javax.swing.JLabel fileContentLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel logLbl;
    private javax.swing.JLabel onPort;
    private javax.swing.JLabel onPortLbl;
    private javax.swing.JButton selectLogo;
    public javax.swing.JTextArea txtLog;
    private javax.swing.JButton writeTo;
    // End of variables declaration//GEN-END:variables
}
